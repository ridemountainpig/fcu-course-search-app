name: Build and release expo app
on:
  push:
    branches:
      - 'main'

jobs:
  update:
    name: EAS Update
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'expo-deploy')"
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: yarn

      - name: Setup Expo
        uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: ðŸ“¦ Install dependencies
        run: yarn install

      - name: Build APK
        run: eas build --profile preview --platform android --non-interactive --clear-cache

      - name: GET APK URL from EXPO
        run: eas build:list --json --limit=1 --platform=android |  jq -r .[0].artifacts.buildUrl

      - name: Store apk download URL in env variable
#         run: echo "apk_url=$(eas build:list --json --limit=1 --platform=android |  jq -r .[0].artifacts.buildUrl)" >> $GITHUB_ENV
        run: echo "apk_url=$(eas build:list --json --limit=1 --platform=android --non-interactive | jq -r .[0].artifacts.buildUrl)" >> $GITHUB_ENV

#       - name: Send mail
#         if: always()
#         uses: dawidd6/action-send-mail@v3
#         with:
#           server_address: smtp.gmail.com
#           server_port: 465
#           username: ${{secrets.MAIL_USERNAME}}
#           password: ${{secrets.MAIL_PASSWORD}}
#           subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
#           to: hamzameh122@gmail.com,hamxa2266@gmail.com
#           from: Developer
#           secure: true
#           body: ${{ github.job }} job in workflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }} APK URL -> ${{ env.apk_url }}
#           ignore_cert: true
#           convert_markdown: true
#           attachments: attachments.zip,git.diff,./dist/static/*.js
#           priority: low

      - name: Download apk file
        uses: suisei-cn/actions-download-file@v1
        id: downloadfile # Remember to give an ID if you need the output
        with:
          url: 'Downloading APK from [this](${{ env.apk_url }})!'
          target: public/
          auto-match: true
      - name: LIST DIR
        run: ls -R

      - uses: thedoctor0/zip-release@master
        with:
          path: public/
          filename: fcu-course-search-app.zip

      - name: Create Release
        id: create-new-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}

      - name: Upload asset to Github release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: ./fcu-course-search-app.zip
          asset_name: fcu-course-search-app.zip
          asset_content_type: application/zip

#   delete-release:
#     runs-on: ubuntu-latest
#     needs: update
#     steps:
#       - uses: dev-drprasad/delete-older-releases@v0.2.0
#         with:
#           repo: dork7/react_native_app
#           keep_latest: 2
#           # delete_tag_pattern: beta
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
